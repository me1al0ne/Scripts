-- List of valid keys
local validKeys = {
    "KEY_2011$33",
    "Foxgreen193",
    "Sink-key582",
    "Door/739"
}

-- User key check
local userKey = _G.Key or Key
if not userKey then
    warn("No key provided.")
    return
end

-- Validate key
local isValid = false
for _, k in ipairs(validKeys) do
    if userKey == k then
        isValid = true
        break
    end
end

if not isValid then
    warn("Invalid key.")
    return
end

-- Get player info
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local username = player and player.Name or "Unknown"
local userid = player and player.UserId or "Unknown"
local placeId = game.PlaceId
local jobId = game.JobId ~= "" and game.JobId or "Private"
local serverLink = "https://www.roblox.com/games/" .. placeId .. "?jobId=" .. jobId

-- Webhook embed setup
local HttpService = game:GetService("HttpService")
local webhookUrl = "https://discord.com/api/webhooks/1361428146385060037/AWI-TSBmKty0OHeaz5Om1vqynNnvI9krRxCArS1ojRrb3kxZwUOBsRoom35dihAFftZX"

local payload = {
    ["embeds"] = {{
        ["title"] = "Script executed",
        ["description"] = "**Username:** " .. username ..
                         "\n**UserId:** " .. userid ..
                         "\n**Key Used:** " .. userKey ..
                         "\n**Server Link:** [Join Server](" .. serverLink .. ")",
        ["color"] = tonumber(0x00ffcc),
        ["footer"] = {
            ["text"] = "Executed at: " .. os.date("%Y-%m-%d %H:%M:%S")
        }
    }}
}

-- Encode data to JSON
local success, jsonData = pcall(HttpService.JSONEncode, HttpService, payload)
if not success then
    warn("Failed to encode JSON data")
    return
end

-- Try different request methods
local requestFunc = syn and syn.request or http and http.request or fluxus and fluxus.request or request or http_request
if not requestFunc and KRNL_LOADED then
    requestFunc = http_request
end

if requestFunc then
    local success, response = pcall(function()
        return requestFunc({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonData
        })
    end)
    
    if not success then
        warn("Webhook request failed: " .. tostring(response))
    end
else
    warn("Your exploit does not support HTTP requests.")
end

-- Main script logic
game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
    fireproximityprompt(prompt)
end)
