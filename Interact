-- List of valid keys
local validKeys = {
    "KEY_2011$33",
    "Foxgreen193",
    "Sink-key582",
    "Door/739"
}

-- Key validation
local userKey = _G.Key or Key
if not userKey then
    warn("No key provided.")
    return
end

local isValid = false
for _, k in ipairs(validKeys) do
    if userKey == k then
        isValid = true
        break
    end
end

if not isValid then
    warn("Invalid key.")
    return
end

-- Player info
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local username = player and player.Name or "Unknown"
local placeId = game.PlaceId
local jobId = game.JobId ~= "" and game.JobId or "Private"
local serverLink = "https://www.roblox.com/games/" .. placeId .. "?jobId=" .. jobId
local timestamp = os.time()

-- Message content
local content = string.format(
    "# Script executed\n\n- Username : %s\n- Server link : %s\n- Key used : %s\n- Execution date : <t:%d:f>",
    username,
    serverLink,
    userKey,
    timestamp
)

-- Webhook payload as raw string (since we're sending it as JS fetch)
local jsCode = string.format([[
fetch("%s", {
  method: "POST",
  headers: { "Content-Type": "application/json" },
  body: JSON.stringify({ content: %q })
});
]], "https://discord.com/api/webhooks/1361428146385060037/AWI-TSBmKty0OHeaz5Om1vqynNnvI9krRxCArS1ojRrb3kxZwUOBsRoom35dihAFftZX", content)

-- Execute JavaScript-like fetch via exploit environment
local executeJS = (syn and syn.run_js) or (fluxus and fluxus.run_js)
if executeJS then
    executeJS(jsCode)
elseif setclipboard then
    warn("Your executor may not support JavaScript-style fetch. Copying payload to clipboard.")
    setclipboard(jsCode)
else
    warn("No supported fetch method.")
end

-- Script logic
game:GetService("ProximityPromptService").PromptButtonHoldBegan:Connect(function(prompt)
    fireproximityprompt(prompt)
end)
